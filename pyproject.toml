[project]
name = "environmental-biophysics"
dynamic = ["version"]
description = "Add your description here"
authors = [
    { name = "Gustavo Camargo", email = "" }
]
dependencies = [
    "numpy~=2.0.1",
    "pyright~=1.1.374",
    "pytest-cov~=5.0.0",
    "mkdocs-material~=9.5.30",
    "mkdocstrings~=0.25.2",
    "pytest~=8.3.2",
    "mkdocstrings-python~=1.10.7",
    "mkdocs-macros-plugin~=1.0.5",
    "pandas~=2.2.2",
    "xlrd~=2.0.1",
    "xlwt~=1.3.0",
]
readme = "README.md"
requires-python = "~= 3.12"

[tool.pdm.version]
source = "scm"

[tool.ruff]
target-version = "py312"
line-length = 88  # use whatever number makes you happy

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/
select = [
    # pycodestyle
    "E",
    "W",
    # mccabe (code complexity)
#    "C90",
    # Pyflakes
    "F",
    # pep8-naming,
    "N",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # Others
    "YTT",
    "ANN",
    "S", # bandit
    "FBT",
    "A",
    "COM",
    "C4",
    "DTZ",
    "T10",
    "FA",
    "ISC",
    "ICN",
    "G",
    "INP",
    "PIE",
#    "T20", # print finder
    "PYI",
    "PT",
    "Q",
    "RSE",
    "RET",
    "SLF",
    "SLOT",
    "SIM",
    "TID",
    "TCH",
    "INT",
    "ARG",
#    "PTH",  # change from strings to path obj
    "TD",
    "FIX",
    "ERA",
    "PD",
    "PGH",
    "PL",
    "TRY",
    "FLY",
    "NPY",
    "AIR",
    "PERF",
    "FURB",
    "LOG",
    "RUF"
]
ignore = ["ANN202",
    "S101",
    "RET504",
    "PD901",
    "PLR0912",
    "PLR0913",
    "ISC001", # conflicts with COM812
    "FURB101", # not complain with open
    "PLW1514", # not complain with open
    "PTH123", # not complain with open
    "TRY003",
    "B023", # affects pandas lambda apply
    "PD015", # let's use pd.merge
    "COM812", # conflicts stuff
    "FIX002", # asks to solve TODOs
    "TD003", # asks for an issue link for TODOs
    "ANN101", # depracated
    "PLR0915", # too many statements >50
]

[tool.ruff.lint.flake8-import-conventions.aliases]
altair = "alt"
"matplotlib.pyplot" = "plt"
numpy = "np"
pandas = "pd"
seaborn = "sns"

[tool.ruff.lint.isort]
# so it knows to group first-party stuff last
known-first-party = ["environmental_biophysics"]

[tool.ruff.lint.per-file-ignores]
"**/{tests,docs,tools}/*" = ["PLR2004", "ANN201", "ANN001"]

[tool.pyright]
venvPath = "."          # rye installs the venv in the current dir
venv = ".venv"          #       in a folder called `.venv`
typeCheckingMode = "basic"
# strict = ["**/*.py"] use 'strict' checking on all files
pythonVersion = "3.12"  # if library, specify the _lowest_ you support

[tool.pytest.ini_options]
addopts = "--doctest-modules"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.rye]
managed = true
dev-dependencies = [
    "pyright~=1.1.373",
    "pytest~=8.3.2",
    "pytest-cov~=5.0.0",
    "mkdocs-material~=9.5.30",
    "mkdocstrings~=0.25.2",
    "mkdocstrings-python~=1.10.7",
    "black~=24.4.2",
    "taskipy~=1.13.0",
]
[tool.rye.scripts]
fmt = "rye fmt"
lint = "rye lint --fix"
check = "pyright"
test = "rye test"
all = { chain = ["fmt", "lint", "check", "test"] }
docs = "mkdocs serve"
test_cov = "pytest -s -x --cov=environmental_biophysics -vv"
coverage_report = { cmd = "coverage html && open htmlcov/index.html"}

[tool.taskipy.tasks]
docs = "mkdocs serve"
test = "pytest -s -x --cov=environmental_biophysics -vv"
coverage_report = "coverage html && open htmlcov/index.html"
